{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2024-12-04T11:02:17.318482Z", "invocation_id": "4ce3d9f7-8e57-414a-bcf5-3b0df839a0cd", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.186844Z", "completed_at": "2024-12-04T11:02:15.197449Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.197964Z", "completed_at": "2024-12-04T11:02:15.322250Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1376047134399414, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.base_pipedrive__fields", "compiled": true, "compiled_code": "SELECT *\nFROM \"postgres\".\"public\".\"fields\"", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"base_pipedrive__fields\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.329805Z", "completed_at": "2024-12-04T11:02:15.336096Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.336633Z", "completed_at": "2024-12-04T11:02:15.395989Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06788420677185059, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__activity", "compiled": true, "compiled_code": "-- This model is a staging table for the activity table in the Pipedrive database.\n-- Renaming a couple of columns to avoid using reserved keywords\n-- Rename others for consistency with other models: model.id, model.reference_model_id\nWITH base_activity AS (\n    SELECT\n        activity_id AS id,\n        type AS activity_type,\n        assigned_to_user AS user_id,\n        deal_id,\n        done AS is_done,\n        due_to::TIMESTAMP AS due_time\n    FROM \"postgres\".\"public\".\"activity\"\n)\nSELECT \n    id,\n    activity_type,\n    user_id,\n    deal_id,\n    is_done,\n    due_time,\n    \n    EXTRACT(MONTH FROM due_time) AS month_number,\n    TO_CHAR(due_time, 'Month') AS month_name\n\nFROM base_activity", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.401731Z", "completed_at": "2024-12-04T11:02:15.404974Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.405440Z", "completed_at": "2024-12-04T11:02:15.459049Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05887913703918457, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__activity_types", "compiled": true, "compiled_code": "-- This model is generated from the `activity_types` table in the `pipedrive` schema.\n-- Renaming a couple of columns to avoid using reserved keywords\n-- The `active` column is a string with just two possible value. It makes more sense as a bool\nSELECT\n    id,\n    name AS activity_name,\n    CASE\n        WHEN active = 'Yes' THEN TRUE\n        ELSE FALSE\n    END AS is_active,\n    type AS activity_type\nFROM \"postgres\".\"public\".\"activity_types\"", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.463781Z", "completed_at": "2024-12-04T11:02:15.467423Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.467900Z", "completed_at": "2024-12-04T11:02:15.520110Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05789899826049805, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__deal_changes", "compiled": true, "compiled_code": "-- This model is generated from the `deal_changes` table in the `pipedrive` schema.\n-- This is not a source deals table, and deal_id is not a PK (UNIQUE), so leave deal_id named as is\nWITH base_deal_changes AS (\n    SELECT\n        deal_id,\n        change_time::TIMESTAMP AS change_time,\n        changed_field_key,\n        new_value\n    FROM \"postgres\".\"public\".\"deal_changes\"\n)\nSELECT\n    deal_id,\n    changed_field_key,\n    new_value,\n    change_time,\n    \n    EXTRACT(MONTH FROM change_time) AS month_number,\n    TO_CHAR(change_time, 'Month') AS month_name\n\nFROM base_deal_changes", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.525555Z", "completed_at": "2024-12-04T11:02:15.528766Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.529211Z", "completed_at": "2024-12-04T11:02:15.579528Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05571293830871582, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__stages", "compiled": true, "compiled_code": "/* NOT USED. \n    The source table has it's origins in the fields table, which is not used in the final model.\n    I would rather keep stages and lost_reasons standardised in the final model.\n    My assumption is that the fields table is used to store custom fields,\n    and if this were to be updated by a sysadmin, the static stages table would not reflect the changes.\nNOT USED. */\n\n-- This model is generated from the `stages` table in the `pipedrive` schema.\n-- Renaming a couple of columns to avoid using reserved keywords and standardise\nSELECT\n    stage_id AS id,\n    stage_name\nFROM \"postgres\".\"public\".\"stages\"", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__stages\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.586194Z", "completed_at": "2024-12-04T11:02:15.590615Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.591169Z", "completed_at": "2024-12-04T11:02:15.643939Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05949282646179199, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__users", "compiled": true, "compiled_code": "-- This model is generated from the `users` table in the `pipedrive` schema.\n-- Renaming a couple of columns to avoid using reserved keywords and standardise\nWITH base_users AS (\n    SELECT\n        id,\n        name AS user_name,\n        email AS user_email,\n        modified::TIMESTAMP AS modified_time\n    FROM \"postgres\".\"public\".\"users\"\n)\nSELECT\n    id,\n    user_name,\n    user_email,\n    modified_time,\n    \n    EXTRACT(MONTH FROM modified_time) AS month_number,\n    TO_CHAR(modified_time, 'Month') AS month_name\n\nFROM base_users", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.648829Z", "completed_at": "2024-12-04T11:02:15.648834Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.649320Z", "completed_at": "2024-12-04T11:02:15.731520Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08423805236816406, "adapter_response": {"_message": "INSERT 2", "code": "INSERT", "rows_affected": 2}, "message": "INSERT 2", "failures": null, "unique_id": "seed.enpal_assessment_project.minor_stages", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.736315Z", "completed_at": "2024-12-04T11:02:15.739258Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.739847Z", "completed_at": "2024-12-04T11:02:15.801723Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06938719749450684, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_timestamp_equal_add_time_new_value", "compiled": true, "compiled_code": "-- Assert that the change_time is equal to the new_value when the changed_field_key is 'add_time'\n-- With this test, it's OK to ignore the new_value field for add_time changes\nSELECT * FROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\n\tWHERE changed_field_key = 'add_time'\n\tAND change_time != new_value::TIMESTAMP", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.809509Z", "completed_at": "2024-12-04T11:02:15.813371Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.813854Z", "completed_at": "2024-12-04T11:02:15.873773Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06627678871154785, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__fields_lost_reasons", "compiled": true, "compiled_code": "-- This model is generated from the `base_pipedrive__fields` model, which has the values buried in a JSON array.\n-- ids should be INTEGER as a rule, even though one DBT test is comparing this to a STRING, I still prefer to cast to INTEGER here and in the test.\n-- because in the real world, collaborators would be confused to see numeric-looking values as STRINGs.\nWITH expand_array AS (\n\tSELECT \n\t\tjsonb_array_elements(field_value_options) AS field_value_options\n\tFROM \"postgres\".\"public_pipedrive_analytics\".\"base_pipedrive__fields\"\n\tWHERE field_key = 'lost_reason'\n)\nSELECT\n\tCAST(field_value_options ->> 'id' AS INTEGER) AS id,\n\tfield_value_options ->> 'label' AS label\nFROM expand_array", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_lost_reasons\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.880588Z", "completed_at": "2024-12-04T11:02:15.885591Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.886333Z", "completed_at": "2024-12-04T11:02:15.941843Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06339693069458008, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__fields_stages", "compiled": true, "compiled_code": "-- This model is generated from the `base_pipedrive__fields` model, which has the values buried in a JSON array.\n-- ids should be INTEGER as a rule, even though one DBT test is comparing this to a STRING, I still prefer to cast to INTEGER here and in the test.\n-- because in the real world, collaborators would be confused to see numeric-looking values as STRINGs.\nWITH expand_array AS (\n\tSELECT \n\t\tjsonb_array_elements(field_value_options) AS field_value_options\n\tFROM \"postgres\".\"public_pipedrive_analytics\".\"base_pipedrive__fields\"\n\tWHERE field_key = 'stage_id'\n)\nSELECT\n\tCAST(field_value_options ->> 'id' AS INTEGER) AS id,\n\tfield_value_options ->> 'label' AS label\nFROM expand_array", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_stages\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.947093Z", "completed_at": "2024-12-04T11:02:15.959457Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.959920Z", "completed_at": "2024-12-04T11:02:15.986056Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.041989803314208984, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__activity_deal_id.baf61bb80e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect deal_id\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\nwhere deal_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:15.991844Z", "completed_at": "2024-12-04T11:02:15.997048Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:15.997808Z", "completed_at": "2024-12-04T11:02:16.026005Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03730893135070801, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__activity_due_time.a110302191", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect due_time\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\nwhere due_time is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.032888Z", "completed_at": "2024-12-04T11:02:16.037433Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.037913Z", "completed_at": "2024-12-04T11:02:16.062859Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.033210039138793945, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__activity_id.5590c96fbb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\nwhere id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.069146Z", "completed_at": "2024-12-04T11:02:16.073749Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.074239Z", "completed_at": "2024-12-04T11:02:16.100800Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0345609188079834, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__activity_is_done.1d7811c543", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_done\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\nwhere is_done is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.106270Z", "completed_at": "2024-12-04T11:02:16.117328Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.117814Z", "completed_at": "2024-12-04T11:02:16.146795Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.043541908264160156, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.relationships_stg_pipedrive__activity_activity_type__activity_type__ref_stg_pipedrive__activity_types_.7370c13ee8", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select activity_type as from_field\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\n    where activity_type is not null\n),\n\nparent as (\n    select activity_type as to_field\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity_types\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.152711Z", "completed_at": "2024-12-04T11:02:16.164154Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.164750Z", "completed_at": "2024-12-04T11:02:16.193497Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.043975830078125, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.accepted_values_stg_pipedrive__deal_changes_changed_field_key__user_id__stage_id__lost_reason__add_time.84526954c0", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        changed_field_key as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\n    group by changed_field_key\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'user_id','stage_id','lost_reason','add_time'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.199752Z", "completed_at": "2024-12-04T11:02:16.205064Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.205612Z", "completed_at": "2024-12-04T11:02:16.232401Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.036750078201293945, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__deal_changes_change_time.aa9805807d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect change_time\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\nwhere change_time is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.239152Z", "completed_at": "2024-12-04T11:02:16.243834Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.244341Z", "completed_at": "2024-12-04T11:02:16.270849Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.034789085388183594, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__deal_changes_deal_id.6ebfdbb65d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect deal_id\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\nwhere deal_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.276589Z", "completed_at": "2024-12-04T11:02:16.281137Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.281592Z", "completed_at": "2024-12-04T11:02:16.309645Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03612685203552246, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__deal_changes_new_value.bb225b4f96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_value\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\nwhere new_value is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.315356Z", "completed_at": "2024-12-04T11:02:16.318791Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.319248Z", "completed_at": "2024-12-04T11:02:16.349000Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03720879554748535, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_change_user_references_user_id", "compiled": true, "compiled_code": "-- CTE to pre-filter deal_changes for stage_id changes\n-- to safely cast new_value to an integer when we're sure all the values can be implicitly casted\nWITH deal_change_user AS (\n\tSELECT changed_field_key, new_value FROM deal_changes\n\tWHERE changed_field_key = 'user_id'\n)\nSELECT *\nFROM deal_change_user d\nLEFT OUTER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\" u\nON CAST(d.new_value AS INTEGER) = u.id\nWHERE u.id IS NULL -- Any non referential values in d will return a NULL s.id", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.357009Z", "completed_at": "2024-12-04T11:02:16.365161Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.365699Z", "completed_at": "2024-12-04T11:02:16.458244Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1051480770111084, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__users_id.2e370a8817", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\nwhere id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.464103Z", "completed_at": "2024-12-04T11:02:16.469211Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.469742Z", "completed_at": "2024-12-04T11:02:16.495006Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03422093391418457, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__users_modified_time.03287111d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect modified_time\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\nwhere modified_time is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.501792Z", "completed_at": "2024-12-04T11:02:16.506584Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.507076Z", "completed_at": "2024-12-04T11:02:16.535209Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03705191612243652, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__users_user_email.ea967e8157", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_email\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\nwhere user_email is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.542665Z", "completed_at": "2024-12-04T11:02:16.547577Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.548081Z", "completed_at": "2024-12-04T11:02:16.575943Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.036461830139160156, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__users_user_name.3145d7edb5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_name\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\nwhere user_name is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.581857Z", "completed_at": "2024-12-04T11:02:16.588327Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.588827Z", "completed_at": "2024-12-04T11:02:16.619525Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04150390625, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.relationships_stg_pipedrive__activity_user_id__id__ref_stg_pipedrive__users_.d7739cfd5d", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select user_id as from_field\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\n    where user_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.625994Z", "completed_at": "2024-12-04T11:02:16.629203Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.629722Z", "completed_at": "2024-12-04T11:02:16.658437Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.035523176193237305, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_change_stage_references_lost_reason_id", "compiled": true, "compiled_code": "-- CTE to pre-filter deal_changes for stage_id changes\n-- to safely cast new_value to an integer when we're sure all the values can be implicitly casted\nWITH deal_change_stage AS (\n\tSELECT changed_field_key, new_value FROM deal_changes\n\tWHERE changed_field_key = 'lost_reason'\n)\nSELECT *\nFROM deal_change_stage d\nLEFT OUTER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_lost_reasons\" s\nON CAST(d.new_value AS INTEGER) = s.id\nWHERE s.id IS NULL -- Any non referential values in d will return a NULL s.id", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.664534Z", "completed_at": "2024-12-04T11:02:16.668059Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.668678Z", "completed_at": "2024-12-04T11:02:16.704733Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04349684715270996, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_change_stage_references_stage_id", "compiled": true, "compiled_code": "-- CTE to pre-filter deal_changes for stage_id changes\n-- to safely cast new_value to an integer when we're sure all the values can be implicitly casted\nWITH deal_change_stage AS (\n\tSELECT changed_field_key, new_value FROM deal_changes\n\tWHERE changed_field_key = 'stage_id'\n)\nSELECT *\nFROM deal_change_stage d\nLEFT OUTER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_stages\" s\nON CAST(d.new_value AS INTEGER) = s.id\nWHERE s.id IS NULL -- Any non referential values in d will return a NULL s.id", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.717500Z", "completed_at": "2024-12-04T11:02:16.720574Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.721026Z", "completed_at": "2024-12-04T11:02:16.767537Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0516660213470459, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.int_deal_changes_dedupe_new_deal", "compiled": true, "compiled_code": "-- Separate new deals model from the deal_changes model\n-- There are a handful of dupe deals in the deal_changes model (assumption - deals should not have more than one added date)\n-- Materialize as a view so it can be tested for deduplication\nSELECT\n\tdeal_id, \n\tMAX(change_time) AS created_time\nFROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\nWHERE changed_field_key = 'add_time'\nGROUP BY\n\tdeal_id", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_new_deal\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.779143Z", "completed_at": "2024-12-04T11:02:16.782746Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.783337Z", "completed_at": "2024-12-04T11:02:16.830918Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.053278207778930664, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.int_deal_changes_dedupe_lost_reason", "compiled": true, "compiled_code": "WITH deal_changes_lost_reason AS (\n\tSELECT\n\t\tROW_NUMBER() OVER(PARTITION BY deal_id ORDER BY change_time DESC) AS reverse_order,\n\t\tdeal_id,\n\t\tnew_value AS lost_reason_id,\n\t\tchange_time,\n\t\tmonth_name,\n\t\tmonth_number\n\tFROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\n\tWHERE changed_field_key = 'lost_reason'\n),\ndeal_changes_lost_reason_cast_id AS (\n\tSELECT\n\t\tdeal_id,\n\t\tCAST(lost_reason_id AS INTEGER) AS lost_reason_id, -- do it here once rather than twice in the final select & join clauses\n\t\tchange_time,\n\t\tmonth_name,\n\t\tmonth_number\n\tFROM deal_changes_lost_reason\n\tWHERE reverse_order = 1\n)\nSELECT\ndcr.deal_id,\ndcr.lost_reason_id,\nlost_reasons.label,\ndcr.change_time,\ndcr.month_name,\ndcr.month_number\nFROM deal_changes_lost_reason_cast_id dcr\nINNER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_lost_reasons\" lost_reasons\nON dcr.lost_reason_id = lost_reasons.id", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_lost_reason\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.836867Z", "completed_at": "2024-12-04T11:02:16.842849Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.843326Z", "completed_at": "2024-12-04T11:02:16.892463Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05738425254821777, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.int_deal_changes_dedupe_stage", "compiled": true, "compiled_code": "-- Separate new deals model from the deal_changes model\n-- There are a handful of dupe deals in the deal_changes model (assumption - deals should not have more of each stage id)\n-- Materialize as a view so it can be tested for deduplication\n-- Method: row_number in reverse order and then pick the first row. \n-- This pattern is better because we don't know how many duplicate rows there could be, but the latest will always be row number 1.\n-- Can't just take MAX(new_value) as was done for new_deals, because there are multiple stage_ids and all that appear need to be presented to the model.\nWITH deal_changes_stage AS (\n\tSELECT\n\t\tROW_NUMBER() OVER(PARTITION BY deal_id, new_value ORDER BY new_value, change_time DESC) AS reverse_order,\n\t\tdeal_id,\n\t\tnew_value AS stage_id,\n\t\tchange_time,\n\t\tmonth_name,\n\t\tmonth_number\n\tFROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\n\tWHERE changed_field_key = 'stage_id'\n),\ndeal_changes_stage_cast_id AS (\n\tSELECT\n\t\tdeal_id,\n\t\tCAST(stage_id AS INTEGER) AS stage_id, -- do it here once rather than twice in the final select & join clauses\n\t\tchange_time,\n\t\tmonth_name,\n\t\tmonth_number\n\tFROM deal_changes_stage\n\tWHERE reverse_order = 1\n)\nSELECT\ndcs.deal_id,\ndcs.stage_id,\nstages.label,\ndcs.change_time,\ndcs.month_name,\ndcs.month_number\nFROM deal_changes_stage_cast_id dcs\nINNER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_stages\" stages\nON dcs.stage_id = stages.id", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_stage\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.897369Z", "completed_at": "2024-12-04T11:02:16.905671Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.906207Z", "completed_at": "2024-12-04T11:02:16.938802Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.044706106185913086, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.unique_int_deal_changes_dedupe_new_deal_deal_id.1fb728a0fc", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    deal_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_new_deal\"\nwhere deal_id is not null\ngroup by deal_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.944794Z", "completed_at": "2024-12-04T11:02:16.949509Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.950044Z", "completed_at": "2024-12-04T11:02:16.985001Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0436248779296875, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.unique_int_deal_changes_dedupe_lost_reason_deal_id.9dd6535907", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    deal_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_lost_reason\"\nwhere deal_id is not null\ngroup by deal_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:16.991975Z", "completed_at": "2024-12-04T11:02:16.995812Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:16.996413Z", "completed_at": "2024-12-04T11:02:17.044940Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05617213249206543, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_unique_deal_stage", "compiled": true, "compiled_code": "SELECT\n    COUNT(*),\n    deal_id,\n    stage_id\nFROM \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_stage\"\nGROUP BY\n    deal_id,\n    stage_id\nHAVING COUNT(*) > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:17.050856Z", "completed_at": "2024-12-04T11:02:17.057885Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:17.058520Z", "completed_at": "2024-12-04T11:02:17.108936Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.059674978256225586, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.int_deal_changes_activity", "compiled": true, "compiled_code": "with __dbt__cte__int_activity_join_activity_type as (\n-- Simple Intermediate Model to join activity and activity_types\n-- thus providing the friendly name of the activity type\n-- Filter out inactive activity types, they are not used in the final report\n\n\nSELECT\n\ta.user_id,\n\ta.deal_id,\n\tt.activity_name,\n\tms.stage_id,\n\tms.minor_stage_id,\n\tt.is_active, -- this would be a mart level filter: business logic determines when to include deactivated activity types\n\ta.is_done, -- this would be a report level filter: analyst determines when to exclude incomplete activities\n\ta.due_time,\n\ta.month_name,\n\ta.month_number\nFROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\" a\nINNER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity_types\" t\n\tON a.activity_type = t.activity_type\nINNER JOIN \"postgres\".\"public\".\"minor_stages\" ms\n\tON t.activity_type = ms.activity_type\n) -- brings in the activity data for each deal in the deal_changes table\n-- Note that there are very few rows compared to the total number of deals\n-- These will just be the ones with call activities against them\nSELECT\n    nd.deal_id,\n    act.activity_name,\n    act.stage_id,\n    act.minor_stage_id,\n    act.is_active, -- this would be a mart level filter: business logic determines when to include deactivated activity types\n    act.is_done, -- this would be a report level filter: analyst determines when to exclude incomplete activities\n    act.month_number,\n    act.month_name\nFROM \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_new_deal\" nd\nINNER JOIN __dbt__cte__int_activity_join_activity_type act\nON nd.deal_id = act.deal_id", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_activity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:17.114399Z", "completed_at": "2024-12-04T11:02:17.119060Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:17.119642Z", "completed_at": "2024-12-04T11:02:17.238162Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12541985511779785, "adapter_response": {"_message": "SELECT 8895", "code": "SELECT", "rows_affected": 8895}, "message": "SELECT 8895", "failures": null, "unique_id": "model.enpal_assessment_project.mrt_deals_stages", "compiled": true, "compiled_code": "WITH all_deal_changes_and_activity AS (\n    SELECT\n        deal_id,\n        stage_id,\n        minor_stage_id,\n        is_done, -- this would be a report level filter: analyst determines when to exclude incomplete activities\n        activity_name AS label,\n        month_name,\n        month_number\n    FROM \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_activity\"\n    WHERE is_active = TRUE -- Mart level filter, most business users will ignore e.g. 'Follow Up Call' that is set to be inactive\n    UNION ALL\n    SELECT\n        deal_id,\n        stage_id,\n        NULL AS minor_stage_id,\n        NULL AS is_done,\n        label,\n        month_name,\n        month_number\n    FROM \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_stage\"\n)\nSELECT\n    nd.deal_id,\n    dca.stage_id,\n    dca.minor_stage_id,\n    dca.is_done,\n    dca.label,\n    dca.month_name,\n    dca.month_number\nFROM \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_new_deal\" nd -- Only deals from the deal_changes model (these have a created_time)\nLEFT OUTER JOIN all_deal_changes_and_activity dca -- This will pick up the minor stages/activities where they exist for this set of deals\n    ON nd.deal_id = dca.deal_id", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"mrt_deals_stages\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T11:02:17.243618Z", "completed_at": "2024-12-04T11:02:17.247431Z"}, {"name": "execute", "started_at": "2024-12-04T11:02:17.247914Z", "completed_at": "2024-12-04T11:02:17.292242Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0501708984375, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.rep_sales_funnel_monthly", "compiled": true, "compiled_code": "-- ASSUMPTIONS FOR THIS MODEL:\n-- Show the number of deals in each stage of the sales funnel, for each month\n    -- Although we have models for users, they are not needed/requested in this model\n    -- Although we have models for lost deals, we are showing the stage the deal was in at the time of the activity \n        -- whether it was closed or not in the end\n    \n\n-- create the funnel steps as requested\nWITH funnel_step_from_stages AS (\n\tSELECT\n\t\tdeal_id,\n\t\tmonth_number,\n\t\tmonth_name,\n\t\tCONCAT(stage_id, \n\t\t\tCASE\n\t\t\t\tWHEN minor_stage_id IS NULL THEN ''\n\t\t\t\tELSE CONCAT('.', minor_stage_id)\n\t\t\tEND\n\t\t) AS funnel_step,\n\t\tlabel AS kpi_name\n\tFROM \"postgres\".\"public_pipedrive_analytics\".\"mrt_deals_stages\" AS funnel\n    WHERE COALESCE(is_done, TRUE) -- report level filter: exclude incomplete activities\n),\n-- aggregate CTE then order, to avoid having to keep the order columns in the view\nmonthly_agg AS (\n\tSELECT\n\t\tCOUNT(deal_id) AS deals_count,\n\t\tmonth_number,\n\t\tmonth_name,\n\t\tfunnel_step,\n\t\tkpi_name\n\tFROM funnel_step_from_stages\n\tGROUP BY\n\t\tmonth_number,\n\t\tmonth_name,\n\t\tfunnel_step,\n\t\tkpi_name\n)\nSELECT\n\tmonth_name AS month,\n\tkpi_name,\n\tfunnel_step,\n\tdeals_count\n\tFROM monthly_agg\nORDER BY month_number, funnel_step", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"rep_sales_funnel_monthly\""}], "elapsed_time": 2.377932071685791, "args": {"partial_parse_file_diff": true, "defer": false, "use_colors_file": true, "show_resource_report": false, "log_format": "default", "source_freshness_run_project_hooks": false, "vars": {}, "version_check": true, "print": true, "log_file_max_bytes": 10485760, "quiet": false, "require_resource_names_without_spaces": false, "static_parser": true, "enable_legacy_logger": false, "log_level": "info", "send_anonymous_usage_stats": true, "printer_width": 80, "exclude_resource_types": [], "indirect_selection": "eager", "invocation_command": "dbt build", "profiles_dir": "/Users/julian/Documents/hatvalues_repo/dbt_enpal_assessment", "partial_parse": true, "select": [], "favor_state": false, "empty": false, "strict_mode": false, "populate_cache": true, "resource_types": [], "show": false, "exclude": [], "export_saved_queries": false, "log_level_file": "debug", "macro_debugging": false, "project_dir": "/Users/julian/Documents/hatvalues_repo/dbt_enpal_assessment", "use_colors": true, "warn_error_options": {"include": [], "exclude": []}, "which": "build", "write_json": true, "include_saved_query": false, "log_path": "/Users/julian/Documents/hatvalues_repo/dbt_enpal_assessment/logs", "cache_selected_only": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_format_file": "debug", "introspect": true}}