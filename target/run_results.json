{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2024-12-04T08:05:11.366959Z", "invocation_id": "b1380658-ef71-42d0-a4cc-6e5c222132bc", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:09.389486Z", "completed_at": "2024-12-04T08:05:09.399267Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:09.399763Z", "completed_at": "2024-12-04T08:05:09.520985Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.13306689262390137, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.base_pipedrive__fields", "compiled": true, "compiled_code": "SELECT *\nFROM \"postgres\".\"public\".\"fields\"", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"base_pipedrive__fields\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:09.527410Z", "completed_at": "2024-12-04T08:05:09.531819Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:09.532283Z", "completed_at": "2024-12-04T08:05:09.582906Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05726170539855957, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__activity", "compiled": true, "compiled_code": "-- This model is a staging table for the activity table in the Pipedrive database.\n-- Renaming a couple of columns to avoid using reserved keywords\n-- Rename others for consistency with other models: model.id, model.reference_model_id\nWITH base_activity AS (\n    SELECT\n        activity_id AS id,\n        type AS activity_type,\n        assigned_to_user AS user_id,\n        deal_id,\n        done AS is_done,\n        due_to::TIMESTAMP AS due_time\n    FROM \"postgres\".\"public\".\"activity\"\n)\nSELECT \n    id,\n    activity_type,\n    user_id,\n    deal_id,\n    is_done,\n    due_time,\n    \n    EXTRACT(MONTH FROM due_time) AS month_number,\n    TO_CHAR(due_time, 'Month') AS month_name\n\nFROM base_activity", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:09.587807Z", "completed_at": "2024-12-04T08:05:09.591102Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:09.591614Z", "completed_at": "2024-12-04T08:05:09.642594Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05635833740234375, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__activity_types", "compiled": true, "compiled_code": "-- This model is generated from the `activity_types` table in the `pipedrive` schema.\n-- Renaming a couple of columns to avoid using reserved keywords\n-- The `active` column is a string with just two possible value. It makes more sense as a bool\nSELECT\n    id,\n    name AS activity_name,\n    CASE\n        WHEN active = 'Yes' THEN TRUE\n        ELSE FALSE\n    END AS activity_is_active,\n    type AS activity_type\nFROM \"postgres\".\"public\".\"activity_types\"", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity_types\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:09.648184Z", "completed_at": "2024-12-04T08:05:09.652167Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:09.652843Z", "completed_at": "2024-12-04T08:05:09.707226Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06078600883483887, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__deal_changes", "compiled": true, "compiled_code": "-- This model is generated from the `deal_changes` table in the `pipedrive` schema.\n-- This is not a source deals table, and deal_id is not a PK (UNIQUE), so leave deal_id named as is\nWITH base_deal_changes AS (\n    SELECT\n        deal_id,\n        change_time::TIMESTAMP AS change_time,\n        changed_field_key,\n        new_value\n    FROM \"postgres\".\"public\".\"deal_changes\"\n)\nSELECT\n    deal_id,\n    changed_field_key,\n    new_value,\n    change_time,\n    \n    EXTRACT(MONTH FROM change_time) AS month_number,\n    TO_CHAR(change_time, 'Month') AS month_name\n\nFROM base_deal_changes", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:09.712868Z", "completed_at": "2024-12-04T08:05:09.716498Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:09.717063Z", "completed_at": "2024-12-04T08:05:09.767497Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05625605583190918, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__stages", "compiled": true, "compiled_code": "/* NOT USED. \n    The source table has it's origins in the fields table, which is not used in the final model.\n    I would rather keep stages and lost_reasons standardised in the final model.\n    My assumption is that the fields table is used to store custom fields,\n    and if this were to be updated by a sysadmin, the static stages table would not reflect the changes.\nNOT USED. */\n\n-- This model is generated from the `stages` table in the `pipedrive` schema.\n-- Renaming a couple of columns to avoid using reserved keywords and standardise\nSELECT\n    stage_id AS id,\n    stage_name\nFROM \"postgres\".\"public\".\"stages\"", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__stages\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:09.772821Z", "completed_at": "2024-12-04T08:05:09.778848Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:09.779516Z", "completed_at": "2024-12-04T08:05:09.830662Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05957293510437012, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__users", "compiled": true, "compiled_code": "-- This model is generated from the `users` table in the `pipedrive` schema.\n-- Renaming a couple of columns to avoid using reserved keywords and standardise\nWITH base_users AS (\n    SELECT\n        id,\n        name AS user_name,\n        email AS user_email,\n        modified::TIMESTAMP AS modified_time\n    FROM \"postgres\".\"public\".\"users\"\n)\nSELECT\n    id,\n    user_name,\n    user_email,\n    modified_time,\n    \n    EXTRACT(MONTH FROM modified_time) AS month_number,\n    TO_CHAR(modified_time, 'Month') AS month_name\n\nFROM base_users", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:09.835689Z", "completed_at": "2024-12-04T08:05:09.838276Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:09.838745Z", "completed_at": "2024-12-04T08:05:09.887726Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.055351972579956055, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_timestamp_equal_add_time_new_value", "compiled": true, "compiled_code": "-- Assert that the change_time is equal to the new_value when the changed_field_key is 'add_time'\n-- With this test, it's OK to ignore the new_value field for add_time changes\nSELECT * FROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\n\tWHERE changed_field_key = 'add_time'\n\tAND change_time != new_value::TIMESTAMP", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:09.894777Z", "completed_at": "2024-12-04T08:05:09.898788Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:09.899274Z", "completed_at": "2024-12-04T08:05:09.946120Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05307197570800781, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__fields_lost_reasons", "compiled": true, "compiled_code": "-- This model is generated from the `base_pipedrive__fields` model, which has the values buried in a JSON array.\n-- ids should be INTEGER as a rule, even though one DBT test is comparing this to a STRING, I still prefer to cast to INTEGER here and in the test.\n-- because in the real world, collaborators would be confused to see numeric-looking values as STRINGs.\nWITH expand_array AS (\n\tSELECT \n\t\tjsonb_array_elements(field_value_options) AS field_value_options\n\tFROM \"postgres\".\"public_pipedrive_analytics\".\"base_pipedrive__fields\"\n\tWHERE field_key = 'lost_reason'\n)\nSELECT\n\tCAST(field_value_options ->> 'id' AS INTEGER) AS id,\n\tfield_value_options ->> 'label' AS reason\nFROM expand_array", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_lost_reasons\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:09.951527Z", "completed_at": "2024-12-04T08:05:09.957249Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:09.958034Z", "completed_at": "2024-12-04T08:05:10.062209Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11230897903442383, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.stg_pipedrive__fields_stages", "compiled": true, "compiled_code": "-- This model is generated from the `base_pipedrive__fields` model, which has the values buried in a JSON array.\n-- ids should be INTEGER as a rule, even though one DBT test is comparing this to a STRING, I still prefer to cast to INTEGER here and in the test.\n-- because in the real world, collaborators would be confused to see numeric-looking values as STRINGs.\nWITH expand_array AS (\n\tSELECT \n\t\tjsonb_array_elements(field_value_options) AS field_value_options\n\tFROM \"postgres\".\"public_pipedrive_analytics\".\"base_pipedrive__fields\"\n\tWHERE field_key = 'stage_id'\n)\nSELECT\n\tCAST(field_value_options ->> 'id' AS INTEGER) AS id,\n\tfield_value_options ->> 'label' AS stage_name\nFROM expand_array", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_stages\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.067457Z", "completed_at": "2024-12-04T08:05:10.079454Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.080140Z", "completed_at": "2024-12-04T08:05:10.106216Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04193377494812012, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__activity_deal_id.baf61bb80e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect deal_id\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\nwhere deal_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.112197Z", "completed_at": "2024-12-04T08:05:10.116894Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.117370Z", "completed_at": "2024-12-04T08:05:10.144969Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03595685958862305, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__activity_due_time.a110302191", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect due_time\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\nwhere due_time is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.151166Z", "completed_at": "2024-12-04T08:05:10.155722Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.156181Z", "completed_at": "2024-12-04T08:05:10.185444Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.037615060806274414, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__activity_id.5590c96fbb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\nwhere id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.191557Z", "completed_at": "2024-12-04T08:05:10.195971Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.196438Z", "completed_at": "2024-12-04T08:05:10.225498Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.037516117095947266, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__activity_is_done.1d7811c543", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_done\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\nwhere is_done is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.231595Z", "completed_at": "2024-12-04T08:05:10.244383Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.244852Z", "completed_at": "2024-12-04T08:05:10.274766Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04643082618713379, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.relationships_stg_pipedrive__activity_activity_type__activity_type__ref_stg_pipedrive__activity_types_.7370c13ee8", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select activity_type as from_field\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\n    where activity_type is not null\n),\n\nparent as (\n    select activity_type as to_field\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity_types\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.280738Z", "completed_at": "2024-12-04T08:05:10.292687Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.293157Z", "completed_at": "2024-12-04T08:05:10.322396Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04505515098571777, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.accepted_values_stg_pipedrive__deal_changes_changed_field_key__user_id__stage_id__lost_reason__add_time.84526954c0", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        changed_field_key as value_field,\n        count(*) as n_records\n\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\n    group by changed_field_key\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'user_id','stage_id','lost_reason','add_time'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.328778Z", "completed_at": "2024-12-04T08:05:10.333922Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.334503Z", "completed_at": "2024-12-04T08:05:10.361664Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03667902946472168, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__deal_changes_change_time.aa9805807d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect change_time\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\nwhere change_time is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.368249Z", "completed_at": "2024-12-04T08:05:10.372880Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.373349Z", "completed_at": "2024-12-04T08:05:10.400702Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03605294227600098, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__deal_changes_deal_id.6ebfdbb65d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect deal_id\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\nwhere deal_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.407152Z", "completed_at": "2024-12-04T08:05:10.412090Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.412626Z", "completed_at": "2024-12-04T08:05:10.446393Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04298901557922363, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__deal_changes_new_value.bb225b4f96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_value\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\nwhere new_value is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.453567Z", "completed_at": "2024-12-04T08:05:10.456989Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.457703Z", "completed_at": "2024-12-04T08:05:10.502813Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05309581756591797, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_change_user_references_user_id", "compiled": true, "compiled_code": "-- CTE to pre-filter deal_changes for stage_id changes\n-- to safely cast new_value to an integer when we're sure all the values can be implicitly casted\nWITH deal_change_user AS (\n\tSELECT changed_field_key, new_value FROM deal_changes\n\tWHERE changed_field_key = 'user_id'\n)\nSELECT *\nFROM deal_change_user d\nLEFT OUTER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\" u\nON CAST(d.new_value AS INTEGER) = u.id\nWHERE u.id IS NULL -- Any non referential values in d will return a NULL s.id", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.510908Z", "completed_at": "2024-12-04T08:05:10.517078Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.517721Z", "completed_at": "2024-12-04T08:05:10.548613Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.041078805923461914, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__users_id.2e370a8817", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\nwhere id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.554978Z", "completed_at": "2024-12-04T08:05:10.560196Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.560754Z", "completed_at": "2024-12-04T08:05:10.591621Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.040505170822143555, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__users_modified_time.03287111d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect modified_time\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\nwhere modified_time is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.599402Z", "completed_at": "2024-12-04T08:05:10.604411Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.604880Z", "completed_at": "2024-12-04T08:05:10.633557Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.037549734115600586, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__users_user_email.ea967e8157", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_email\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\nwhere user_email is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.639661Z", "completed_at": "2024-12-04T08:05:10.644356Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.644864Z", "completed_at": "2024-12-04T08:05:10.672782Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03668689727783203, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.not_null_stg_pipedrive__users_user_name.3145d7edb5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_name\nfrom \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\nwhere user_name is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.679245Z", "completed_at": "2024-12-04T08:05:10.685973Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.686438Z", "completed_at": "2024-12-04T08:05:10.716521Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04052400588989258, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.relationships_stg_pipedrive__activity_user_id__id__ref_stg_pipedrive__users_.d7739cfd5d", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select user_id as from_field\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\"\n    where user_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.722060Z", "completed_at": "2024-12-04T08:05:10.725943Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.726445Z", "completed_at": "2024-12-04T08:05:10.759883Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.041053056716918945, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_change_stage_references_lost_reason_id", "compiled": true, "compiled_code": "-- CTE to pre-filter deal_changes for stage_id changes\n-- to safely cast new_value to an integer when we're sure all the values can be implicitly casted\nWITH deal_change_stage AS (\n\tSELECT changed_field_key, new_value FROM deal_changes\n\tWHERE changed_field_key = 'lost_reason'\n)\nSELECT *\nFROM deal_change_stage d\nLEFT OUTER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_lost_reasons\" s\nON CAST(d.new_value AS INTEGER) = s.id\nWHERE s.id IS NULL -- Any non referential values in d will return a NULL s.id", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.765821Z", "completed_at": "2024-12-04T08:05:10.769083Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.769680Z", "completed_at": "2024-12-04T08:05:10.801252Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.038513898849487305, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_change_stage_references_stage_id", "compiled": true, "compiled_code": "-- CTE to pre-filter deal_changes for stage_id changes\n-- to safely cast new_value to an integer when we're sure all the values can be implicitly casted\nWITH deal_change_stage AS (\n\tSELECT changed_field_key, new_value FROM deal_changes\n\tWHERE changed_field_key = 'stage_id'\n)\nSELECT *\nFROM deal_change_stage d\nLEFT OUTER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__fields_stages\" s\nON CAST(d.new_value AS INTEGER) = s.id\nWHERE s.id IS NULL -- Any non referential values in d will return a NULL s.id", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.814277Z", "completed_at": "2024-12-04T08:05:10.818823Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.819389Z", "completed_at": "2024-12-04T08:05:10.868800Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.056169986724853516, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.int_deal_changes_dedupe_lost_reason", "compiled": true, "compiled_code": "WITH deal_changes_lost_reason AS (\n\tSELECT\n\t\tROW_NUMBER() OVER(PARTITION BY deal_id ORDER BY change_time DESC) AS reverse_order,\n\t\tdeal_id,\n\t\tnew_value AS lost_reason,\n\t\tchange_time,\n\t\tmonth_name,\n\t\tmonth_number\n\tFROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\n\tWHERE changed_field_key = 'lost_reason'\n)\nSELECT\n\tdeal_id,\n\tlost_reason,\n\tchange_time,\n\tmonth_name,\n\tmonth_number\nFROM deal_changes_lost_reason WHERE reverse_order = 1", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_lost_reason\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.874241Z", "completed_at": "2024-12-04T08:05:10.877676Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.878172Z", "completed_at": "2024-12-04T08:05:10.923807Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.051455020904541016, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.int_deal_changes_dedupe_new_deal", "compiled": true, "compiled_code": "-- Separate new deals model from the deal_changes model\n-- There are a handful of dupe deals in the deal_changes model (assumption - deals should not have more than one added date)\n-- Materialize as a view so it can be tested for deduplication\nSELECT\n\tdeal_id, \n\tMAX(change_time) AS created_time\nFROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\nWHERE changed_field_key = 'add_time'\nGROUP BY\n\tdeal_id", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_new_deal\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:10.928886Z", "completed_at": "2024-12-04T08:05:10.933527Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:10.933993Z", "completed_at": "2024-12-04T08:05:10.988697Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.061594247817993164, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.int_deal_changes_dedupe_stage", "compiled": true, "compiled_code": "-- Separate new deals model from the deal_changes model\n-- There are a handful of dupe deals in the deal_changes model (assumption - deals should not have more of each stage id)\n-- Materialize as a view so it can be tested for deduplication\n-- Method: row_number in reverse order and then pick the first row. \n-- This pattern is better because we don't know how many duplicate rows there could be, but the latest will always be row number 1.\n-- Can't just take MAX(new_value) as was done for new_deals, because there are multiple stage_ids and all that appear need to be presented to the model.\nWITH deal_changes_stage AS (\n\tSELECT\n\t\tROW_NUMBER() OVER(PARTITION BY deal_id, new_value ORDER BY new_value, change_time DESC) AS reverse_order,\n\t\tdeal_id,\n\t\tnew_value AS stage_id,\n\t\tchange_time,\n\t\tmonth_name,\n\t\tmonth_number\n\tFROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__deal_changes\"\n\tWHERE changed_field_key = 'stage_id'\n)\nSELECT\ndeal_id,\nstage_id,\nchange_time,\nmonth_name,\nmonth_number\nFROM deal_changes_stage WHERE reverse_order = 1", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_stage\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:11.004337Z", "completed_at": "2024-12-04T08:05:11.015417Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:11.016190Z", "completed_at": "2024-12-04T08:05:11.062261Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06238722801208496, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.unique_int_deal_changes_dedupe_lost_reason_deal_id.9dd6535907", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    deal_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_lost_reason\"\nwhere deal_id is not null\ngroup by deal_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:11.071765Z", "completed_at": "2024-12-04T08:05:11.079046Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:11.079670Z", "completed_at": "2024-12-04T08:05:11.117521Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.049764156341552734, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.unique_int_deal_changes_dedupe_new_deal_deal_id.1fb728a0fc", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    deal_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_new_deal\"\nwhere deal_id is not null\ngroup by deal_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:11.124131Z", "completed_at": "2024-12-04T08:05:11.127552Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:11.128024Z", "completed_at": "2024-12-04T08:05:11.180911Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06050992012023926, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.enpal_assessment_project.assert_unique_deal_stage", "compiled": true, "compiled_code": "SELECT\n    COUNT(*),\n    deal_id,\n    stage_id\nFROM \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_stage\"\nGROUP BY\n    deal_id,\n    stage_id\nHAVING COUNT(*) > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:11.188137Z", "completed_at": "2024-12-04T08:05:11.194539Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:11.195129Z", "completed_at": "2024-12-04T08:05:11.247863Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06131315231323242, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enpal_assessment_project.int_deal_changes_activity", "compiled": true, "compiled_code": "with __dbt__cte__int_activity_join_activity_type as (\n-- Simple Intermediate Model to join activity and activity_types\n-- thus providing the friendly name of the activity type\n-- Filter out inactive activity types, they are not used in the final report\n\n\nSELECT\n\ta.user_id,\n\ta.deal_id,\n\tt.activity_name,\n\tt.activity_is_active,\n\ta.is_done,\n\ta.due_time,\n\ta.month_name,\n\ta.month_number\nFROM \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity\" a\nINNER JOIN \"postgres\".\"public_pipedrive_analytics\".\"stg_pipedrive__activity_types\" t\n\tON a.activity_type = t.activity_type\n) -- brings in the activity data for each deal in the deal_changes table\n-- Note that there are very few rows compared to the total number of deals\n-- These will just be the ones with call activities against them\nSELECT\n    nd.deal_id,\n    act.activity_name,\n    act.activity_is_active,\n    act.is_done,\n    act.month_number,\n    act.month_name\nFROM \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_new_deal\" nd\nINNER JOIN __dbt__cte__int_activity_join_activity_type act\nON nd.deal_id = act.deal_id", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_activity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-04T08:05:11.252707Z", "completed_at": "2024-12-04T08:05:11.255802Z"}, {"name": "execute", "started_at": "2024-12-04T08:05:11.256248Z", "completed_at": "2024-12-04T08:05:11.339155Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08800005912780762, "adapter_response": {"_message": "SELECT 1995", "code": "SELECT", "rows_affected": 1995}, "message": "SELECT 1995", "failures": null, "unique_id": "model.enpal_assessment_project.mrt_deals_stages", "compiled": true, "compiled_code": "SELECT\n    nd.deal_id,\n    nd.created_time\nFROM \"postgres\".\"public_pipedrive_analytics\".\"int_deal_changes_dedupe_new_deal\" nd", "relation_name": "\"postgres\".\"public_pipedrive_analytics\".\"mrt_deals_stages\""}], "elapsed_time": 2.2047767639160156, "args": {"warn_error_options": {"include": [], "exclude": []}, "version_check": true, "vars": {}, "require_resource_names_without_spaces": false, "indirect_selection": "eager", "partial_parse_file_diff": true, "log_format_file": "debug", "select": [], "source_freshness_run_project_hooks": false, "exclude_resource_types": [], "invocation_command": "dbt build", "export_saved_queries": false, "printer_width": 80, "use_colors": true, "favor_state": false, "log_level_file": "debug", "show_resource_report": false, "exclude": [], "print": true, "include_saved_query": false, "log_path": "/Users/julian/Documents/hatvalues_repo/dbt_enpal_assessment/logs", "empty": false, "log_file_max_bytes": 10485760, "resource_types": [], "write_json": true, "project_dir": "/Users/julian/Documents/hatvalues_repo/dbt_enpal_assessment", "introspect": true, "quiet": false, "require_explicit_package_overrides_for_builtin_materializations": true, "partial_parse": true, "strict_mode": false, "macro_debugging": false, "populate_cache": true, "log_level": "info", "show": false, "send_anonymous_usage_stats": true, "profiles_dir": "/Users/julian/Documents/hatvalues_repo/dbt_enpal_assessment", "enable_legacy_logger": false, "defer": false, "use_colors_file": true, "static_parser": true, "which": "build", "cache_selected_only": false, "log_format": "default"}}